1. 구조
    notJapan
    ㄴbin          : 
      ㄴwww        : 엔트리 포인트 : 코드의 시작점, 서버가동, 포트지정, 실시간통신소켓설정
    ㄴnode_modules : 해당 프로젝트를 구동할때 사용하는 패키지(모듈) 모아둔 곳
                     만약 없다면 => npm install
    ㄴpublic       : 정적 데이터 위치, 이미지, 클라이언트사이드js, css, 별도의 주소를 지정하지 않아도 웹에서 접근이 가능
    ㄴroutes       : 라우트 : 요청이 들어오면 누가 처리할 것인지 연결한다 (라우팅)
      ㄴindex.js   : 서버 사이드 js
      ㄴusers.js   
    ㄴviews        : html이 위치한 곳, 단 템플릿 엔진에 따라 파일명이 변경이 되는데 
                     express -e notJapan : -e 옵션인 템플릿 엔진을 ejs를 사용하겠다 라는 뜻
      ㄴindex.ejs    *.ejs 저장
    ㄴapp.js       : 이 파일이 진정한 시작점이다
    ㄴpackage.json : node 프로젝트의 메타 정보, 구동법, 사용패키지등
                     "npm 스크립트명령(start)"


2. 개발 상 문제
   - 소수를 수정하고 새로운 내용이 반영될려면, 서버를 내리고, 다시 올려야 한다.
     => 번잡하고, 시간이 미세하게 소모된다.
   - 소수를 수정만 하면 자동으로 재가동 되면 좋겠다.
     => nodemon 
     => $ npm i -g nodemon
   $ nodemon ./bin/www
     - 편의상 명령어를 통일하기 위해서 : package.json 수정
     ===========================================================================================
      "scripts": {
        "start": "nodemon ./bin/www"
      }
     =========================================================================================== 
     - 향후는 계속해서 아래 명령으로 가동
     $ npm start